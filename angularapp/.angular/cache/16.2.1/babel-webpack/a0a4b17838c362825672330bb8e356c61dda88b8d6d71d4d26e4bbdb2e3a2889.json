{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor() {\n    this.foods = [{\n      name: 'Banana',\n      calories: 105,\n      image: 'https://example.com/banana.jpg',\n      quantity: 1\n    }, {\n      name: 'Salmon',\n      calories: 367,\n      image: 'https://example.com/salmon.jpg',\n      quantity: 1\n    }, {\n      name: 'Cake',\n      calories: 225,\n      image: 'https://example.com/cake.jpg',\n      quantity: 1\n    }\n    // Add more initial foods as needed\n    ];\n\n    this.newFood = {\n      name: '',\n      calories: 0,\n      image: '',\n      quantity: 1\n    };\n    this.showForm = false;\n    this.searchTerm = '';\n    this.todaysFoods = [];\n  }\n  // Toggle the form for adding new foods\n  toggleForm() {\n    this.showForm = !this.showForm;\n  }\n  // Add a new food to the list\n  addFood() {\n    if (this.newFood.name && this.newFood.calories && this.newFood.image) {\n      this.foods.push({\n        ...this.newFood\n      });\n      this.newFood = {\n        name: '',\n        calories: 0,\n        image: '',\n        quantity: 1\n      };\n      this.showForm = false;\n    }\n  }\n  // Filter foods based on the search term\n  get filteredFoods() {\n    return this.foods.filter(food => food.name.toLowerCase().includes(this.searchTerm.toLowerCase()));\n  }\n  // Add a food to today's foods\n  addToTodaysFoods(food) {\n    const existingFood = this.todaysFoods.find(f => f.name === food.name);\n    if (existingFood) {\n      existingFood.quantity += food.quantity;\n    } else {\n      this.todaysFoods.push({\n        ...food\n      });\n    }\n  }\n  // Calculate the total calories for today's foods\n  calculateTotalCalories() {\n    return this.todaysFoods.reduce((total, food) => total + food.calories * food.quantity, 0);\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"names":["Component","AppComponent","constructor","foods","name","calories","image","quantity","newFood","showForm","searchTerm","todaysFoods","toggleForm","addFood","push","filteredFoods","filter","food","toLowerCase","includes","addToTodaysFoods","existingFood","find","f","calculateTotalCalories","reduce","total","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/coder/project/workspace/angularapp/src/app/app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  foods: any[] = [\n    { name: 'Banana', calories: 105, image: 'https://example.com/banana.jpg', quantity: 1 },\n    { name: 'Salmon', calories: 367, image: 'https://example.com/salmon.jpg', quantity: 1 },\n    { name: 'Cake', calories: 225, image: 'https://example.com/cake.jpg', quantity: 1 }\n    // Add more initial foods as needed\n  ];\n\n  newFood: any = { name: '', calories: 0, image: '', quantity: 1 };\n  showForm: boolean = false;\n  searchTerm: string = '';\n  todaysFoods: any[] = [];\n\n  // Toggle the form for adding new foods\n  toggleForm() {\n    this.showForm = !this.showForm;\n  }\n\n  // Add a new food to the list\n  addFood() {\n    if (this.newFood.name && this.newFood.calories && this.newFood.image) {\n      this.foods.push({ ...this.newFood });\n      this.newFood = { name: '', calories: 0, image: '', quantity: 1 };\n      this.showForm = false;\n    }\n  }\n\n  // Filter foods based on the search term\n  get filteredFoods() {\n    return this.foods.filter(food => food.name.toLowerCase().includes(this.searchTerm.toLowerCase()));\n  }\n\n  // Add a food to today's foods\n  addToTodaysFoods(food: any) {\n    const existingFood = this.todaysFoods.find(f => f.name === food.name);\n    if (existingFood) {\n      existingFood.quantity += food.quantity;\n    } else {\n      this.todaysFoods.push({ ...food });\n    }\n  }\n\n  // Calculate the total calories for today's foods\n  calculateTotalCalories() {\n    return this.todaysFoods.reduce((total, food) => total + food.calories * food.quantity, 0);\n  }\n}\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOzC,IAAaC,YAAY,GAAzB,MAAaA,YAAY;EAAzBC,YAAA;IACE,KAAAC,KAAK,GAAU,CACb;MAAEC,IAAI,EAAE,QAAQ;MAAEC,QAAQ,EAAE,GAAG;MAAEC,KAAK,EAAE,gCAAgC;MAAEC,QAAQ,EAAE;IAAC,CAAE,EACvF;MAAEH,IAAI,EAAE,QAAQ;MAAEC,QAAQ,EAAE,GAAG;MAAEC,KAAK,EAAE,gCAAgC;MAAEC,QAAQ,EAAE;IAAC,CAAE,EACvF;MAAEH,IAAI,EAAE,MAAM;MAAEC,QAAQ,EAAE,GAAG;MAAEC,KAAK,EAAE,8BAA8B;MAAEC,QAAQ,EAAE;IAAC;IACjF;IAAA,CACD;;IAED,KAAAC,OAAO,GAAQ;MAAEJ,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAC,CAAE;IAChE,KAAAE,QAAQ,GAAY,KAAK;IACzB,KAAAC,UAAU,GAAW,EAAE;IACvB,KAAAC,WAAW,GAAU,EAAE;EAmCzB;EAjCE;EACAC,UAAUA,CAAA;IACR,IAAI,CAACH,QAAQ,GAAG,CAAC,IAAI,CAACA,QAAQ;EAChC;EAEA;EACAI,OAAOA,CAAA;IACL,IAAI,IAAI,CAACL,OAAO,CAACJ,IAAI,IAAI,IAAI,CAACI,OAAO,CAACH,QAAQ,IAAI,IAAI,CAACG,OAAO,CAACF,KAAK,EAAE;MACpE,IAAI,CAACH,KAAK,CAACW,IAAI,CAAC;QAAE,GAAG,IAAI,CAACN;MAAO,CAAE,CAAC;MACpC,IAAI,CAACA,OAAO,GAAG;QAAEJ,IAAI,EAAE,EAAE;QAAEC,QAAQ,EAAE,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAC,CAAE;MAChE,IAAI,CAACE,QAAQ,GAAG,KAAK;;EAEzB;EAEA;EACA,IAAIM,aAAaA,CAAA;IACf,OAAO,IAAI,CAACZ,KAAK,CAACa,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACb,IAAI,CAACc,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACT,UAAU,CAACQ,WAAW,EAAE,CAAC,CAAC;EACnG;EAEA;EACAE,gBAAgBA,CAACH,IAAS;IACxB,MAAMI,YAAY,GAAG,IAAI,CAACV,WAAW,CAACW,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACnB,IAAI,KAAKa,IAAI,CAACb,IAAI,CAAC;IACrE,IAAIiB,YAAY,EAAE;MAChBA,YAAY,CAACd,QAAQ,IAAIU,IAAI,CAACV,QAAQ;KACvC,MAAM;MACL,IAAI,CAACI,WAAW,CAACG,IAAI,CAAC;QAAE,GAAGG;MAAI,CAAE,CAAC;;EAEtC;EAEA;EACAO,sBAAsBA,CAAA;IACpB,OAAO,IAAI,CAACb,WAAW,CAACc,MAAM,CAAC,CAACC,KAAK,EAAET,IAAI,KAAKS,KAAK,GAAGT,IAAI,CAACZ,QAAQ,GAAGY,IAAI,CAACV,QAAQ,EAAE,CAAC,CAAC;EAC3F;CACD;AA9CYN,YAAY,GAAA0B,UAAA,EALxB3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACW7B,YAAY,CA8CxB;SA9CYA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}