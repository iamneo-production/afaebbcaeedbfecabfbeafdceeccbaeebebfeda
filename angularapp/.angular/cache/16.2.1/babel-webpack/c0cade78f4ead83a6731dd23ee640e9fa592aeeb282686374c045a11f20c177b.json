{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nfunction FoodListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"img\", 1);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const food_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"alt\", \"\", food_r1.name, \" Image\");\n    i0.ɵɵproperty(\"src\", \"assets/\" + food_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(food_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", food_r1.calories, \" Calories\");\n  }\n}\nclass FoodListComponent {\n  constructor() {\n    // Define foods array and other properties here\n    this.todaysFoods = [];\n    this.todaysFoodsTotalCalories = 0;\n  }\n  addToTodaysList(food) {\n    const existingFood = this.todaysFoods.find(f => f.name === food.name);\n    if (existingFood) {\n      existingFood.quantity += 1;\n    } else {\n      this.todaysFoods.push({\n        ...food,\n        quantity: 1\n      });\n    }\n    this.todaysFoodsTotalCalories += food.calories;\n  }\n}\n_class = FoodListComponent;\n_class.ɵfac = function FoodListComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-food-list\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"src\", \"alt\"]],\n  template: function FoodListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FoodListComponent_div_0_Template, 6, 4, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.foods);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { FoodListComponent };\nupdateTotalCalories();\n{\n  this.todaysFoodsTotalCalories = this.todaysFoods.reduce((total, food) => total + food.calories * food.quantity, 0);\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵpropertyInterpolate1","food_r1","name","ɵɵproperty","image","ɵɵsanitizeUrl","ɵɵtextInterpolate","ɵɵtextInterpolate1","calories","FoodListComponent","constructor","todaysFoods","todaysFoodsTotalCalories","addToTodaysList","food","existingFood","find","f","quantity","push","selectors","decls","vars","consts","template","FoodListComponent_Template","rf","ctx","ɵɵtemplate","FoodListComponent_div_0_Template","foods","updateTotalCalories","reduce","total"],"sources":["/home/coder/project/workspace/angularapp/src/app/food-list/food-list.component.ts","/home/coder/project/workspace/angularapp/src/app/food-list/food-list.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-food-list',\n  templateUrl: './food-list.component.html',\n  styleUrls: ['./food-list.component.css']\n})\nexport class FoodListComponent {\n  // Define foods array and other properties here\n\n  todaysFoods: any[] = [];\n  todaysFoodsTotalCalories: number = 0;\n\n  addToTodaysList(food: any) {\n    const existingFood = this.todaysFoods.find(f => f.name === food.name);\n\n    if (existingFood) {\n      existingFood.quantity += 1;\n    } else {\n      this.todaysFoods.push({ ...food, quantity: 1 });\n    }\n\n    this.todaysFoodsTotalCalories += food.calories;\n  }\n}\nupdateTotalCalories() {\n  this.todaysFoodsTotalCalories = this.todaysFoods.reduce((total, food) => total + (food.calories * food.quantity), 0);\n}\n\n","<div *ngFor=\"let food of foods\">\n    <img [src]=\"'assets/' + food.image\" alt=\"{{ food.name }} Image\">\n    <p>{{ food.name }}</p>\n    <p>{{ food.calories }} Calories</p>\n  </div>\n  "],"mappings":";;;;ICAAA,EAAA,CAAAC,cAAA,UAAgC;IAC5BD,EAAA,CAAAE,SAAA,aAAgE;IAChEF,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAG,MAAA,GAAe;IAAAH,EAAA,CAAAI,YAAA,EAAI;IACtBJ,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAG,MAAA,GAA4B;IAAAH,EAAA,CAAAI,YAAA,EAAI;;;;IAFCJ,EAAA,CAAAK,SAAA,GAA2B;IAA3BL,EAAA,CAAAM,sBAAA,YAAAC,OAAA,CAAAC,IAAA,WAA2B;IAA1DR,EAAA,CAAAS,UAAA,oBAAAF,OAAA,CAAAG,KAAA,EAAAV,EAAA,CAAAW,aAAA,CAA8B;IAChCX,EAAA,CAAAK,SAAA,GAAe;IAAfL,EAAA,CAAAY,iBAAA,CAAAL,OAAA,CAAAC,IAAA,CAAe;IACfR,EAAA,CAAAK,SAAA,GAA4B;IAA5BL,EAAA,CAAAa,kBAAA,KAAAN,OAAA,CAAAO,QAAA,cAA4B;;;ADDnC,MAKaC,iBAAiB;EAL9BC,YAAA;IAME;IAEA,KAAAC,WAAW,GAAU,EAAE;IACvB,KAAAC,wBAAwB,GAAW,CAAC;;EAEpCC,eAAeA,CAACC,IAAS;IACvB,MAAMC,YAAY,GAAG,IAAI,CAACJ,WAAW,CAACK,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACf,IAAI,KAAKY,IAAI,CAACZ,IAAI,CAAC;IAErE,IAAIa,YAAY,EAAE;MAChBA,YAAY,CAACG,QAAQ,IAAI,CAAC;KAC3B,MAAM;MACL,IAAI,CAACP,WAAW,CAACQ,IAAI,CAAC;QAAE,GAAGL,IAAI;QAAEI,QAAQ,EAAE;MAAC,CAAE,CAAC;;IAGjD,IAAI,CAACN,wBAAwB,IAAIE,IAAI,CAACN,QAAQ;EAChD;;SAhBWC,iBAAiB;;mBAAjBA,MAAiB;AAAA;;QAAjBA,MAAiB;EAAAW,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCP9BhC,EAAA,CAAAkC,UAAA,IAAAC,gCAAA,iBAIQ;;;MAJcnC,EAAA,CAAAS,UAAA,YAAAwB,GAAA,CAAAG,KAAA,CAAQ;;;;;SDOjBrB,iBAAiB;AAkB9BsB,mBAAmB,EAAE;AAAC;EACpB,IAAI,CAACnB,wBAAwB,GAAG,IAAI,CAACD,WAAW,CAACqB,MAAM,CAAC,CAACC,KAAK,EAAEnB,IAAI,KAAKmB,KAAK,GAAInB,IAAI,CAACN,QAAQ,GAAGM,IAAI,CAACI,QAAS,EAAE,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}